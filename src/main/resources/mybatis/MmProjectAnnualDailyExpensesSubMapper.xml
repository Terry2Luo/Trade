<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rongwei.pims.job.dao.MmProjectAnnualDailyExpensesSubMapper">

  <select id="listProjectContractInfo" resultType="com.rongwei.pims.job.domain.MmProjectAnnualDailyExpensesVO">
      select mm.projectid, mm.projectcode 'mmprojectCode', mcp.ContractID, mcp.ContractProjectSplitId
      ,collMoney.receivemoneyamount,  totalcollMoney.totalreceivemoneyamount
      ,revenus.revenusamount,  totalrevenus.totalrevenusamount
      ,paid.paidmoneyamount,  totalpaid.totalpaidmoneyamount
      ,cost.purchasecostamount,  totalcost.totalpurchasecostamount
      ,predailycost.predailycostamount
      from MM_Project mm JOIN MM_ContractProjectSplit mcp on mm.projectid = mcp.MMProjectId
      join MM_contract con on con.contractid = mcp.contractid and con.contractcode is not null
      left join (
      select cps.MMProjectId, col.ContractId, sum(SplitMoney) 'receivemoneyamount' from MM_Collection col
      JOIN  MM_CollectionPrjSplit cps on cps.CollectionId = col.CollectionId
      where DatePart(year, col.CollectDate) =#{year}
      group by cps.MMProjectId, col.ContractId
      ) collMoney on collMoney.MMProjectId = mcp.MMProjectId and collMoney.ContractId = mcp.ContractId
      left join (
      select cps.MMProjectId, col.ContractId, sum(SplitMoney) 'totalreceivemoneyamount' from MM_Collection col
      JOIN  MM_CollectionPrjSplit cps on cps.CollectionId = col.CollectionId
      where DatePart(year, col.CollectDate) &lt;=#{year}
      group by cps.MMProjectId, col.ContractId
      ) totalcollMoney on totalcollMoney.MMProjectId = mcp.MMProjectId and totalcollMoney.ContractId = mcp.ContractId

      left join (
      select a.MM_PROJECT_ID, a.CONTRACT_ID, sum(REVENUE_AMOUNT) 'revenusamount' from MM_CONTRACT_REVENUE_PRJ a
      where DatePart(year, a.FINISHED_DATE) =#{year}
      group by a.MM_PROJECT_ID, a.CONTRACT_ID
      ) revenus on revenus.MM_PROJECT_ID = mcp.MMProjectId and revenus.CONTRACT_ID = mcp.ContractId

      left join (
      select a.MM_PROJECT_ID, a.CONTRACT_ID, sum(REVENUE_AMOUNT) 'totalrevenusamount' from MM_CONTRACT_REVENUE_PRJ a
      where DatePart(year, a.FINISHED_DATE) &lt;=#{year}
      group by a.MM_PROJECT_ID, a.CONTRACT_ID
      ) totalrevenus on totalrevenus.MM_PROJECT_ID = mcp.MMProjectId and totalrevenus.CONTRACT_ID = mcp.ContractId

      left join (
          select a.MmProjectId, a.ContractID, sum(PaiedAmount) 'paidmoneyamount' from PM_PaymentProject a
          join PM_Payment pay on pay.PaymentId = a.PaymentId
          join PM_PurchaseContract c on a.PurchaseContractId = c.PurchaseContractId
              and c.PurchaseContractId not in (
                select PurchaseContractId from PM_PurchaseContract
                  where isinsidecompany='Y' and MainDeptId = SupplierId
              )
          where DatePart(year, pay.PayDate) =#{year}
          group by a.MmProjectId, a.ContractID
      ) paid on paid.MmProjectId = mcp.MMProjectId and paid.ContractID = mcp.ContractId

      left join (
          select a.MmProjectId, a.ContractID, sum(PaiedAmount) 'totalpaidmoneyamount' from PM_PaymentProject a
          join PM_Payment pay on pay.PaymentId = a.PaymentId
          join PM_PurchaseContract c on a.PurchaseContractId = c.PurchaseContractId
              and c.PurchaseContractId not in (
              select PurchaseContractId from PM_PurchaseContract
              where isinsidecompany='Y' and MainDeptId = SupplierId
              )
          where DatePart(year, pay.PayDate) &lt;=#{year}
          group by a.MmProjectId, a.ContractID
      ) totalpaid on totalpaid.MmProjectId = mcp.MMProjectId and totalpaid.ContractID = mcp.ContractId

      left join (
          select a.ProjectId, c.ContractID, sum(a.ProjectOutput) 'purchasecostamount' from PM_PurchasePrjOutput a
          Join PM_PURCHASE_OUTPUT b on b.PURCHASE_OUTPUT_ID = a.PURCHASE_OUTPUT_ID
          join PM_PurchaseContract c on a.PurchaseContractId = c.PurchaseContractId
              and c.PurchaseContractId not in (
                select PurchaseContractId from PM_PurchaseContract where isinsidecompany='Y' and MainDeptId = SupplierId
              )
          where DatePart(year, b.FINISHED_DATE) =#{year}
          group by a.ProjectId, c.ContractID
      ) cost on cost.ProjectId = mcp.MMProjectId and cost.ContractID = mcp.ContractId

      left join (
      select a.ProjectId, c.ContractID, sum(a.ProjectOutput) 'totalpurchasecostamount' from PM_PurchasePrjOutput a
      Join PM_PURCHASE_OUTPUT b on b.PURCHASE_OUTPUT_ID = a.PURCHASE_OUTPUT_ID
      join PM_PurchaseContract c on a.PurchaseContractId = c.PurchaseContractId
          and c.PurchaseContractId not in (
          select PurchaseContractId from PM_PurchaseContract where isinsidecompany='Y' and MainDeptId = SupplierId
          )
      where DatePart(year, b.FINISHED_DATE) &lt;=#{year}
      group by a.ProjectId, c.ContractID
      ) totalcost on totalcost.ProjectId = mcp.MMProjectId and totalcost.ContractID = mcp.ContractId



      left join (
      select a.ProjectId, a.ContractID, sum(a.DailyCostAmount) 'predailycostamount' from MM_Project_Annual_Daily_Expenses a
      where Year &lt; #{year}
      group by a.ProjectId, a.ContractID
      ) predailycost on predailycost.ProjectId = mcp.MMProjectId and predailycost.ContractID = mcp.ContractId
    <where>
        1=1
        <if test="projectCode != null  "> and mm.projectCode = #{projectCode} </if>
        <if test="marketStatus != null  ">and mm.MarketStatus in
            <foreach collection="marketStatus" index="index" item="item" open="(" separator="," close=")">
                #{item}
             </foreach>
         </if>


    </where>
  </select>

  <delete id="deleteByYearAndCode" >
    delete    from MM_Project_Annual_Daily_Expenses where Year = #{year}
      <if test="projectCode != null  "> and mmprojectCode = #{projectCode} </if>
      <if test="marketStatus != null  "> and ProjectId in(
          select projectid from MM_Project where marketStatus in
          <foreach collection="marketStatus" index="index" item="item" open="(" separator="," close=")">
              #{item}
          </foreach>
        )

      </if>
  </delete>

    <insert id="insertBatch">
        INSERT INTO MM_Project_Annual_Daily_Expenses
        (projectid, contractid, RevenusAmount, TotalRevenusAmount
        , PurchaseCostAmount, TotalPurchaseCostAmount, ReceiveMoneyAmount, TotalReceiveMoneyAmount
        , DailyCostAmount,TotalDailyCostAmount , insertTime,Year
        , paidMoneyAmount,totalpaidMoneyAmount, AnnualPurchaseRemaindAmount, MMProjectCode)
        VALUES
        <foreach collection ="list" item="item" index= "index" separator =",">
            (
            #{item.projectid},   #{item.contractid}, #{item.revenusamount}, #{item.totalrevenusamount}
            , #{item.purchasecostamount} , #{item.totalpurchasecostamount}, #{item.receivemoneyamount},#{item.totalreceivemoneyamount}, #{item.dailycostamount}, #{item.totaldailycostamount},
            #{item.inserttime}, #{item.year},#{item.paidmoneyamount}
            ,#{item.totalpaidmoneyamount}
            ,cast(#{item.annualpurchaseremaindamount,jdbcType=DECIMAL} as decimal(20,6))
            , #{item.mmprojectcode}
            )
        </foreach >
    </insert>
</mapper>